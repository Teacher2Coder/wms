// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WMS.Api.DbContexts;

#nullable disable

namespace WMS.Api.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20250816024736_ProductName")]
    partial class ProductName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WMS.Api.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("SectionId")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            SectionId = 0,
                            SerialNumber = "SKU001-1",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            SectionId = 0,
                            SerialNumber = "SKU002-2",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            SectionId = 0,
                            SerialNumber = "SKU003-3",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            SectionId = 0,
                            SerialNumber = "SKU004-4",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            SectionId = 0,
                            SerialNumber = "SKU001-5",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 2,
                            SectionId = 0,
                            SerialNumber = "SKU002-6",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 3,
                            SectionId = 0,
                            SerialNumber = "SKU003-7",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 4,
                            SectionId = 0,
                            SerialNumber = "SKU004-8",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 1,
                            SectionId = 0,
                            SerialNumber = "SKU001-9",
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 2,
                            SectionId = 0,
                            SerialNumber = "SKU002-10",
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 3,
                            SectionId = 0,
                            SerialNumber = "SKU003-11",
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 4,
                            SectionId = 0,
                            SerialNumber = "SKU004-12",
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 1,
                            SectionId = 0,
                            SerialNumber = "SKU001-13",
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 2,
                            SectionId = 0,
                            SerialNumber = "SKU002-14",
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 3,
                            SectionId = 0,
                            SerialNumber = "SKU003-15",
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 4,
                            SectionId = 0,
                            SerialNumber = "SKU004-16",
                            Status = 0
                        });
                });

            modelBuilder.Entity("WMS.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Product 1",
                            Name = "Product 1",
                            Sku = "SKU001"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Product 2",
                            Name = "Product 2",
                            Sku = "SKU002"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Product 3",
                            Name = "Product 3",
                            Sku = "SKU003"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Product 4",
                            Name = "Product 4",
                            Sku = "SKU004"
                        });
                });

            modelBuilder.Entity("WMS.Api.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Main section for storing goods.",
                            Name = "Main Section",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Secondary section for overflow storage.",
                            Name = "Secondary Section",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Main section for storing goods.",
                            Name = "Main Section",
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Secondary section for overflow storage.",
                            Name = "Secondary Section",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("WMS.Api.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Primary warehouse for storing goods.",
                            Location = "123 Main St, Springfield",
                            Name = "Main Warehouse"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Secondary warehouse for overflow storage.",
                            Location = "456 Elm St, Springfield",
                            Name = "Secondary Warehouse"
                        });
                });

            modelBuilder.Entity("WMS.Api.Entities.Item", b =>
                {
                    b.HasOne("WMS.Api.Entities.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WMS.Api.Entities.Section", "Section")
                        .WithMany("Items")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("WMS.Api.Entities.Section", b =>
                {
                    b.HasOne("WMS.Api.Entities.Warehouse", "Warehouse")
                        .WithMany("Sections")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WMS.Api.Entities.Product", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WMS.Api.Entities.Section", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WMS.Api.Entities.Warehouse", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
